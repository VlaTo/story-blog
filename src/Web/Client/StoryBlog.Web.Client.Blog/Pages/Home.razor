@page "/"

@using StoryBlog.Web.Microservices.Posts.Shared.Models
@using StoryBlog.Web.Client.Blog.Models
@using StoryBlog.Web.Client.Blog.Store
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Home</PageTitle>

<div class="storyblog-blog-list">

<MudOverlay LightBackground=true AutoClose=false Visible=IsLoading>
    <MudProgressCircular Color=Color.Primary Indeterminate=true></MudProgressCircular>
</MudOverlay>

@foreach (var post in Store.Value.Posts)
{
    <MudPaper @key=post.Key Square=true Class="storyblog-home-blog" Elevation=0>
        <MudOverlay LightBackground=true AutoClose=false Absolute=true Visible=@(PostState.Updating == post.State)>
            <MudProgressCircular Color=Color.Secondary Indeterminate=true></MudProgressCircular>
        </MudOverlay>
        <BlogEntry Title=@post.Title data-test="test-value" Slug=@post.Slug>
            <HeaderContent>
                <div class="mr-2">
                    <strong>@@@post.Author</strong>
                </div>
                <DateTimeView Class="mr-2" Typo=@Typo.caption Mode=@DateTimeMode.RelativeFromCurrent DateTime=@post.CreatedAt/>
                <div>
                    <MudText Typo=@Typo.caption>@post.CommentsCount комментариев</MudText>
                </div>
                <MudSpacer/>
                @if (IsAuthorOf(post))
                {
                    <MudChip
                        Variant=@Variant.Outlined
                        Disabled=@(false == post.IsPublic)
                        Color=@Color.Info
                        Size=@Size.Small>
                        Public
                    </MudChip>
                    if (PostModelStatus.Pending == post.Status)
                    {
                        <MudChip Variant=@Variant.Outlined Color=@Color.Primary Size=@Size.Small>Pending</MudChip>
                    }
                    <MudIconButton
                        Class="quick-action"
                        Size=@Size.Small
                        Disabled=@IsTogglePublicDisabled(post)
                        ButtonType=@ButtonType.Button
                        Icon=@Icons.Material.Filled.Visibility
                        OnClick=@(() => DoTogglePublic(post.Key, !post.IsPublic))
                    />
                    <MudIconButton
                        Class="quick-action"
                        Disabled=@IsEditDisabled(post)
                        Size=@Size.Small
                        ButtonType=@ButtonType.Button
                        Icon=@Icons.Material.Filled.Edit
                        OnClick=@(() => DoPostEdit(post.Slug))
                    />
                    <MudIconButton
                        Class="quick-action"
                        Disabled=@IsDeleteDisabled(post)
                        Size=@Size.Small
                        ButtonType=@ButtonType.Button
                        Icon=@Icons.Material.Filled.Delete
                        OnClick=@(() => DoPostDelete(post.Key, post.Title))
                    />
                }
            </HeaderContent>
            <ChildContent>
                @(new MarkupString(post.Text))
            </ChildContent>
        </BlogEntry>
    </MudPaper>
}
</div>

@if ((StoreState.Loading != Store.Value.StoreState) || (0 < Store.Value.Posts.Count))
{
    <div class="d-flex justify-center mt-2">
        <MudPagination
            Class="my-2 storyblog-pager"
            Variant=@Variant.Outlined
            ShowFirstButton=@true
            ShowLastButton=@true
            @bind-Selected=@SelectedPageNumber
            Count=@Store.Value.PagesCount>
        </MudPagination>
    </div>
}